Если вы начнете набирать название папки и нажмете Tab, система сама его подставит. 
Если просто нажмете Tab, ничего не вводя, система начнет перебирать возможные варианты

mc - вызов файлового менеджера Midnight Commander

w - узнать кто залогинен в системе
pwd - текущее местонахождение
cd - переход к директории
/ - корневой каталог
cd / - переход к корневому каталогу
cd - - вернуться к предыдущему каталогу
cd ~ - перейти к домашнему каталогу
cd .. - перейти на одну директорию выше
cd ../.. - перейти на 2 директории выше

clear - очистить консоль

ls - содержание папки в которой находимся
ls -l - вывод колонки с доп инфо о файлах
ls -L - подробное содержпние папки в которой находимся
ls -t - сортировка по времени изменения файла или директории(свежие файлы внизу)
ls -r обратная сортировка
ls -a - показать скрытые папки и файлы
ls -A - показать скрытые папки и файлы, кроме системных
ls имя_папки - отобразить содержание указанной папки
Можно комбинировать ключи: ls -a -l тоже самое, что и ls -al или ls -la

man имя_команды - вывод справки по команде. Например man ls. Чтобы выйти необходимо нажать на кнопку "q"

touch имя_файла - создать пустой файл
mkdir имя_папки - создать пустую папку
mkdir -p путь - создать все недостающие директории в иерархии
rmdir имя_папки - удалить пустую папку
mv [откуда] имя_папки/файла [куда] - перемещение папки или файла. 
cp [откуда] имя_папки/файла [куда] - копирование папки или файла
cp имя_папки/* имя_папки - скопировать всё содержимое папки
cp -r - скопировать папку со всем содержимым
cp -f - игнорировать ошибки при копировании
rm папка/имя_файла - удаление файла. Пример: rm two/log3.txt
rm -r имя_папки - удаление папки и её содержимого. Пример: rm -r two
rm -r ./* - удалить содержимое текущей папки
rm -f - позволяет игнорировать ошибки при удалении
rm -i - безопасное удаление. Например: rm -ri one - система будет уведомлять и спрашивать разрешение на удаление файла (y/n)

Скрытые папки и файлы:
.hidden.txt - скрытый файл
.hidden_dir - скрытая папка

cat - объединение текстовых файлов. Например cat log.txt log1.txt - вывод объединённого содержимого

tail n имя_файла - вывести n последних строк файла
tail -f имя_файла - позволяет выводить новые данные в файле в реальном времени

less имя_файла - открыть файл в less
nano имя_файла - открыть файл в редакторе nano
^ - ctrl
vi имя_файла открыть файл в редакторе vi
	нажать кнопку "i" - вход в режим правки
	нажать кнопку "esc" - выход из режима правки
	:w - сохранение файла
	:q - выход из редактора
	:q! - выход без сохранения
	:номер_строки - перевод курсора на номер строки
	/слово - поиск по тексту
	нажать dd - удаление строки
	:u - отменить последнее действие

grep текст имя_файла - поиск текста начиная с указанного каталога
grep -i текст имя_файла - игнорирование регистра
grep -v текст имя_файла - показать только несовпавшие строки
grep -c текст имя_файла - подсчёт строк
grep -R текст папка/ - поиск по директории

find папка -name имя_файла - поиск по имени файла
find папка -name *_file - поиск по частичному названию файла
find папка -type d  - поиск по директориям. Пример: find папка -name -type d -name "one*"
find папка -name "*.mp3" -delete - удалить найденные файлы
find папка -name "*.mp3" -delete -print - вывести удаляемые файлы

echo текст - вывод строки "текст" в консоль
echo текст > file.txt - записать результаты команды в файл
echo текст >> file.txt - дозаписать результаты команды в файл

команда | команда - передача вывода одной команды на вход другой
cat my.file | grep -i file
ls | grep file

ps - вывести список процессов
ps x - вывести процессы запущенные не только в терминале
ps u - вывести процессы пользователя
ps au - вывести все процессы терминала
ps aux - вывести все процессы

top - вывести таблицу процессов(обновляется)
kill номер_PID - завершить процесс
kill -g номер_PID - завершить процесс немедленно

ping google.com - отсылка тестовых пакетов
ping -c кол_пакетов - количество пакетов google.com
ping -c 3 -i 5 google.com - отсылка 3 пакетов с интервалом в 5 секунд

hostname - узнать имя в вашем хосте или сети
hostname -i - ip адрес

проверить, открыты ли нужные порты:
telnet <ip> <port>
telnet checkip.dyndns.org 80

curl адресс_сайта - послать GET запрос
curl -L ya.ru - переход по редиректу
curl -verbose - показать доп информацию. Пример curl -L ya.ru --verbose

curl https://reqres.in/api/users?параметры
curl -X POST https://reqres.in/api/login --data "email = peter@klaven" --data "password = 1234"

curl -H "заголовок" отправка запроса с заголовком

ssh пользователь@сервер - доступ на удалённый сервер
exit - выход из удалённого соединения
scp пользователь@сервер:/папка/файл папка - копирование с удалённой машины
scp папка/файл пользователь@сервер:/папка - копирование на удалённу машину

Выполнение команды с несколькими аргументами:
команда | xargs ключи команда 2
echo a b c d e f | xargs find . -name *.new_file | xargs cat

$имя - переменная окружения. Пример:
a = "Hello"
echo $a -> Hello

bash - начать новую сессию
exit - выход из сессии

export имя = значение - экспорт переменной
Чтобы переменная была доступна в любой сессии bash:
echo "A = 'Hello world'" >> ~/.bashrc

имя = $(команда) - записать результат команды в переменную
me = $(whoami)
echo $me -> имя текущего пользователя

alias имя = "команда" - установить alias для команды

source имя - запустить bash скрипт
source bash.run

history - отобразить историю команд
!! - выполнить последнюю команду из истории
!-n - выполнить команду за n команд до последней
ctrl+R - поиск по командам
ifconfig - вывод сетевой информации
uname - инфо о системе
free -  сколько оперативной памяти занято или свободно
df -hT - свободное место на дисках

Как установить приложение

Если вы привыкли к винде, то для вас установка приложения — это скачать некий setup файлик, 
запустить и до упора тыкать «далее-далее-далее». В линуксе все немного по-другому. 
Тут приложения ставятся как пакеты. И для каждой системы есть свой менеджер пакетов:

yum — red hat, centos
dpkg, apt — debian

Например: yum install mc


Как запустить приложение

Некоторые приложения запускаются через скрипты. Например, чтобы запустить сервер приложения WildFly, 
нужно перейти в папку bin и запустить там standalone.sh. Файл с расширением .sh — это скрипт.

Чтобы запустить скрипт, нужно указать полный путь к нему:

/opt/cdi/jboss/bin/standalone.sh — запустили скрипт standalone.sh

Это важно! Даже если вы находитесь в той папке, где и скрипт, он не будет найден, если просто 
указать название sh-скрипта. Надо написать так:

./standalone.sh — запустили скрипт, если мы в той же директории

Поиск идет только в каталогах, записанных в переменную PATH. Так что если скрипт используется часто, 
добавляйте путь туда и вызывайте просто по названию:

standalone.sh --- запустили скрипт standalone.sh, путь к которому прописан в PATH

Если же приложение запускается как сервис, то все еще проще:

service test start — запустить сервис под названием «test»
service test stop — остановить сервис

Чтобы сервис test запускался автоматически при рестарте системы, используйте команду:

chkconfig test on

Она добавит службу в автозапуск.

Чтобы узнать, куда приложение установилось, используйте whereis (без пробела):

whereis newman

Как создать архив

Стандартная утилита, которая будет работать даже на «голой» системе — tar. 
Правда, для ее использования надо запомнить флаги. Для создания архива стандартная комбинация cvzf:

tar -cvzf archive.tar.gz /home/test

Для распаковки меняем флаг «c» на «x» и убираем «z»:

tar -xvf archive.tar.gz

Хотя система пишет, что распаковала «/home/test», на самом деле папка «test» появляется там, где мы сейчас находимся.

Давайте разберемся, что все эти флаги означают:

c — создать архив в linux
x — извлечь файлы из архива
v — показать подробную информацию о процессе работы (без него мы бы не увидели, какие файлики запаковались / распаковались)
f — файл для записи архива
z — сжатие

Для упаковки используется опция c — Create, а для распаковки x — eXtract.

zip - сжатие файла в zip архив
unzip - извлечение файла из zip архива